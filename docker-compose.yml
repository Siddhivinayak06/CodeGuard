version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: codeguard-frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - PORT=3000
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: codeguard-backend
    ports:
      - "5000:5000"
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db:
        condition: service_healthy   # ✅ Wait for DB health
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: codeguard-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: codeguard
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:                     # ✅ Added healthcheck
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  python-runtime:
    build:
      context: ./backend
      dockerfile: Dockerfile.python
    image: codeguard-python
    restart: unless-stopped

  c-runtime:
    image: gcc:latest
    restart: unless-stopped

volumes:
  pgdata:
